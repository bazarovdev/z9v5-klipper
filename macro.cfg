[gcode_macro PRINT_START]
gcode:
    # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float * 0.02 %}
    {% set y_wait = 20 + printer.toolhead.axis_maximum.y|float * 0.01 %}
    {% set z_purge = 1.0 %}

    # Start heating
    M140 S{target_bed}                  # Set bed temperature
    M104 S{target_extruder}             # Set the hotend temp

    # Home the printer, set absolute positioning
    G28                                                   # Full home (XYZ)
    G90                                                   # Absolute position

    ##  Uncomment for bed mesh (1 of 2 for bed mesh)
    #BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

    ##  Uncomment for bed mesh (2 of 2 for bed mesh)
    #BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

    # Wait for the hotend to reach the target temperature
    G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to wait position
    M190 S{target_bed}                                    # Wait for the bed to reach the target temperature
    M109 S{target_extruder}                               # Wait for the hotend to reach the target temperature

    # Get ready to print by doing a primeline 
    M107 ;Off Fan
    G1 Z5.0 F3000 ;Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y25 Z{z_purge} F6000 ; Move to start position
    G1 X0.1 Y125.0 Z{z_purge} F1000 E25 ; Draw the first line
    G92 E0 ; Reset Extruder
    G1 X0.4 Y125.0 Z{z_purge} F6000 ; Move to side a little
    G1 X0.4 Y25 Z{z_purge} F1000 E20 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y25 Z{z_purge} F3000.0 ; Move over to prevent blob squish
    G92 E0


[gcode_macro PRINT_END]
description: End of print macro
gcode:
    {% set printable_height = printer.toolhead.axis_maximum.z|float %}
    {% set travel_speed = 100 %}
    {% set z_space = 50 %}
    {% set print_bed_max = printer.toolhead.axis_maximum %}
    {% set max_layer_z = printer.toolhead.position.z %}

    G90 ; Absolute positioning
    {% if max_layer_z < printable_height %}
        G1 Z{[max_layer_z + z_space, printable_height] | min } F600 ; Move print head up
    {% endif %}
    G1 X5 Y{print_bed_max[1]*0.8} F{travel_speed*60} ; present print
    M140 S0 ; turn off heatbed
    M104 S0 ; turn off hotend
    M107 ; turn off fan
    M84 X Y E ; disable motors

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park_x2: 150 # try half your bed size.
variable_park_y2: 300
variable_z_lift2: 10
variable_velocity2: 60
variable_retract2: 0.5
gcode:
    TURN_OFF_HEATERS
# safe park coords
    {% set th = printer.toolhead %}
    {% set park_x2 = [params.X|default(park_x2)|int, th.axis_maximum.x-2]|min %}
    {% set park_y2 = [params.Y|default(park_y2)|int, th.axis_maximum.y-10]|min %}
    {% set park_z2 = [th.position.z + params.Z_LIFT|default(z_lift2)|int, th.axis_maximum.z]|min %}
    {% set park_feedrate2 = params.VELOCITY|default(velocity2)|int * 60 %}
       
    G91
    G1 E-{retract2} F3000
    
    # park toolhead
    G90
    G0 X{park_x2} Y{park_y2} Z{park_z2} F{park_feedrate2}
    CANCEL_PRINT_BASE


# End of gcode script

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro BED_PID_60]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro EXTRUDER_PID_200]
gcode:
    M106 S179
    PID_CALIBRATE HEATER=extruder TARGET=200
